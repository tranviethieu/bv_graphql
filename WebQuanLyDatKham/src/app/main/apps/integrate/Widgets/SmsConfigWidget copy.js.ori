import React, { useState, useEffect } from 'react';
import { useForm } from '@fuse/hooks'
import { FormGroup, IconButton, Icon, FormControl, InputLabel, Divider, Checkbox, Button, Typography, NativeSelect, TextField } from '@material-ui/core';
import { useDispatch, useSelector } from 'react-redux';
import SwipeableDrawer from '@material-ui/core/SwipeableDrawer';
import * as Actions from "../store/actions";
import { omit } from '@utils'


const initialData = {
    provider: "VIVAS",
    username: "",
    password: "",
    brandname: "",
    secretkey: "",
    messagetype: "UNSIGN"

}
function SmsConfigWidget() {
    const dispatch = useDispatch();
    const drawer = useSelector(({ integrateApp }) => integrateApp.integrates.drawer)
    const { form, handleChange, setForm } = useForm(initialData);
    const [active, setActive] = useState(false);
    useEffect(() => {
        if (drawer.data && drawer.data.template&&drawer.data.type ==="SMS") {
            setForm(drawer.data.template);
            setActive(drawer.data.active);
        }
    },[drawer.data, setForm])
    function handleSubmit() {
        const data = omit(drawer.data, ['channels']);//data ko co channels

        dispatch(Actions.saveIntegratedAccount({ ...data,active, template: JSON.stringify(form) }));
    }
    function onOpen() {

    }
    function onClose() {
        dispatch(Actions.hideDrawer())
    }
    return (
        <SwipeableDrawer
          className="h-full absolute z-30 el-SmsConfigWidget-Cover"
          variant="temporary"
          anchor="right"
          open={(drawer.open &&drawer.data&& drawer.data.type === "SMS")?true:false}
          onClose={onClose}
          onOpen={onOpen}
          style={{ position: 'absolute' }}
          ModalProps={{
            keepMounted: true,
            disablePortal: true,
            BackdropProps: {
              classes: {
                root: "absolute"
              }
            }
          }}
        >
          <div style={{ width: "780px", height: "100%", backgroundColor: "transparent", display: "flex", marginTop: "64px", color: "#595959" }} id = "el-SmsConfigWidget">
            <div style={{ width: "720px", backgroundColor: "#EBF1F4" }}>
              <IconButton onClick={onClose} color="inherit">
                <Icon>close</Icon>
              </IconButton>

              <Typography className="text-17 font-bold px-24 py-5 text-dark">Thiết lập liên kết tới nhà cung cấp SMS của bạn</Typography>
              <Divider />
              <div className="p-24 w-full">
                <FormGroup className="w-full">
                  <FormControl>
                    <InputLabel>Nhà cung cấp SMS</InputLabel>
                    <NativeSelect
                      className="mt-8 mb-16"
                      name="provider"
                      value={form.provider}
                      onChange={handleChange}
                      fullWidth
                    >
                      <option value="VIVAS">Vivas</option>
                      <option value="SYNWAY">Synway SMG</option>
                      <option value="VIETTEL">Viettel</option>
                    </NativeSelect>

                  </FormControl>
                </FormGroup>
                <TextField
                  className="mb-24"
                  label="Tài khoản kết nối"
                  autoFocus
                  error={form.username === ''}
                  name="username"
                  value={form.username?form.username:''}
                  onChange={handleChange}
                  variant="outlined"
                  required
                  fullWidth
                />
                <TextField
                  className="mb-24"
                  label="Mật khẩu"
                  autoFocus
                  error={form.password === ''}
                  name="password"
                  value={form.password}
                  onChange={handleChange}
                  variant="outlined"
                  required
                  fullWidth
                />
                {
                  form.provider === "VIVAS"&&<TextField
                    className="mb-24"
                    label="Mã bí mật"
                    autoFocus
                    error={form.secretkey === ''}
                    name="secretkey"
                    value={form.secretkey}
                    onChange={handleChange}
                    variant="outlined"
                    required
                    fullWidth
                                       />
                }
                {form.provider === "VIVAS" && <TextField
                  className="mb-24"
                  label="BrandName"
                  name="brandname"
                  value={form.brandname}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                {form.provider === "SYNWAY" && <TextField
                  className="mb-24"
                  label="Địa chỉ gateway vd: http://192.168.1.1:8080"
                  name="apihost"
                  value={form.apihost}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                {form.provider === "SYNWAY" && <TextField
                  className="mb-24"
                  label="Cổng sim Viettel (cách nhau bởi dấu phẩy)"
                  name="viettelport"
                  value={form.viettelport}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                {form.provider === "SYNWAY" && <TextField
                  className="mb-24"
                  label="Cổng sim Mobifone (cách nhau bởi dấu phẩy)"
                  name="mobiport"
                  value={form.mobiport}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                {form.provider === "SYNWAY" && <TextField
                  className="mb-24"
                  label="Cổng sim Vinaphone (cách nhau bởi dấu phẩy)"
                  name="vinaport"
                  value={form.vinaport}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                {form.provider === "SYNWAY" && <TextField
                  className="mb-24"
                  label="Cổng sim vietnammobile (cách nhau bởi dấu phẩy)"
                  name="vnmport"
                  value={form.vnmport}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                {form.provider === "SYNWAY" && <TextField
                  className="mb-24"
                  label="Cổng sim GMobile (cách nhau bởi dấu phẩy)"
                  name="gmobiport"
                  value={form.gmobiport}
                  onChange={handleChange}
                  variant="outlined"
                  fullWidth
                                        />
                }
                <FormGroup className="w-full">
                  <FormControl>
                    <InputLabel>Loại tin nhắn</InputLabel>
                    <NativeSelect
                      className="mt-8 mb-16"
                      name="messagetype"
                      value={form.messagetype||'UNSIGN'}
                      onChange={handleChange}
                      fullWidth
                    >
                      <option value="UNSIGN">Không dấu</option>
                      <option value="SIGN">Có dấu</option>
                    </NativeSelect>

                  </FormControl>
                </FormGroup>
                <div>
                  <Checkbox checked={active} onChange={e=>setActive(e.target.checked)} name="active"/>
                  <label>Kích hoạt</label>
                </div>
                <Button variant="contained" color="primary" onClick={handleSubmit}>Lưu cấu hình</Button>
              </div>
            </div>
          </div>
        </SwipeableDrawer>
    )
}

export default SmsConfigWidget;
